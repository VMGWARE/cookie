image: registry.vmgware.dev/library/golang:1.22-libvips

variables:
  KUBE_CONTEXT: vmgware/infrastructure:camphouse-dev

stages:
  - prepare
  - test
  - security
  - build
  - deploy

# Common settings for jobs
.common_template:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/

prepare:
  extends: .common_template
  stage: prepare
  script:
    - make vendor

format:
  extends: .common_template
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)

vet:
  extends: .common_template
  stage: test
  script:
    - go vet $(go list ./... | grep -v /vendor/)

test:
  extends: .common_template
  stage: test
  script:
    - go test -race $(go list ./... | grep -v /vendor/)


# sast-go:
# #   extends: .common_template
# #   stage: security
# #   before_script:
# #     - go install github.com/securego/gosec/v2/cmd/gosec@latest
# #   script:
# #     - gosec ./...

semgrep-sast:
  stage: security
include:
- template: Security/SAST.gitlab-ci.yml

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/Dockerfile"
      --no-push
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  needs:
    - format
    - vet
    - test

build-push:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - sh ./ci/scripts/kaniko.sh
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/Dockerfile"
      --label org.opencontainers.image.vendor="${IMAGE_VENDOR:-$GITLAB_USER_EMAIL}"
      --label org.opencontainers.image.title="${CI_PROJECT_NAME}${IMAGE_SUFFIX:+/$IMAGE_SUFFIX}${IMAGE_TAG:+:$IMAGE_TAG}"
      --label org.opencontainers.image.source="${CI_PROJECT_URL}"
      --label org.opencontainers.image.ref.name="${CI_COMMIT_REF_NAME}"
      --label org.opencontainers.image.revision="${CI_COMMIT_SHA}"
      --destination "${DOCKER_REGISTRY_IMAGE}:next-${CI_COMMIT_SHA:0:8}"
      --destination "${DOCKER_REGISTRY_IMAGE}:next"
      --destination "${HARBOR_REGISTRY_IMAGE}:next-${CI_COMMIT_SHA:0:8}"
      --destination "${HARBOR_REGISTRY_IMAGE}:next"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy-dev:
  stage: deploy
  image:
    name: insidiousfiddler/azure-aks-helm-cli:latest
    entrypoint: ['']
  script:
    - kubectl config get-contexts
    - kubectl config use-context $KUBE_CONTEXT
    - cd infrastructure/k8s
    - bash ./deploy.sh --version next-${CI_COMMIT_SHA:0:8} dev
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  when: manual