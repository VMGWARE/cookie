image: registry.vmgware.dev/library/golang:1.22-libvips

variables:
  KUBE_CONTEXT: vmgware/infrastructure:camphouse-dev

stages:
  - prepare
  - test
  - security
  - build
  - deploy

# Common settings for jobs
.common_template:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/
    policy: pull
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "merge_request_event"

# @Description Install dependencies
prepare:
  extends: .common_template
  stage: prepare
  script:
    - make vendor
  cache:
    policy: pull-push
    when: on_success

# @Description Run go fmt
format:
  extends: .common_template
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)

# @Description Run go vet
vet:
  extends: .common_template
  stage: test
  script:
    - go vet $(go list ./... | grep -v /vendor/)

# @Description Run tests
test:
  extends: .common_template
  stage: test
  script:
    - go test -race $(go list ./... | grep -v /vendor/)

# @Description Run SAST using Gosec
sast-go:
  extends: .common_template
  stage: security
  before_script:
    - go install github.com/securego/gosec/v2/cmd/gosec@latest
  script:
    - gosec ./...
  allow_failure: true

# @Description Run SAST using Semgrep
semgrep-sast:
  stage: security
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "merge_request_event"
include:
- template: Security/SAST.gitlab-ci.yml

# @Description Build the image but do not push it to the registry
build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/Dockerfile"
      --no-push
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "merge_request_event"

# @Description Build and push the image to the registry
build-push:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - sh ./ci/scripts/kaniko.sh
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/Dockerfile"
      --label org.opencontainers.image.vendor="${IMAGE_VENDOR:-$GITLAB_USER_EMAIL}"
      --label org.opencontainers.image.title="${CI_PROJECT_NAME}${IMAGE_SUFFIX:+/$IMAGE_SUFFIX}${IMAGE_TAG:+:$IMAGE_TAG}"
      --label org.opencontainers.image.source="${CI_PROJECT_URL}"
      --label org.opencontainers.image.ref.name="${CI_COMMIT_REF_NAME}"
      --label org.opencontainers.image.revision="${CI_COMMIT_SHA}"
      --destination "${DOCKER_REGISTRY_IMAGE}:next-${CI_COMMIT_SHA:0:8}"
      --destination "${DOCKER_REGISTRY_IMAGE}:next"
      --destination "${HARBOR_REGISTRY_IMAGE}:next-${CI_COMMIT_SHA:0:8}"
      --destination "${HARBOR_REGISTRY_IMAGE}:next"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# @Description Deploy to dev environment
deploy-dev:
  stage: deploy
  image:
    name: insidiousfiddler/azure-aks-helm-cli:latest
    entrypoint: ['']
  script:
    - kubectl config get-contexts
    - kubectl config use-context $KUBE_CONTEXT
    - cd infrastructure/k8s
    - bash ./deploy.sh --version next-${CI_COMMIT_SHA:0:8} dev
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  when: manual